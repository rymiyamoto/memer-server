// Code generated by MockGen. DO NOT EDIT.
// Source: hello_world.go

// Package usecase is a generated GoMock package.
package usecase

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIHelloWorld is a mock of IHelloWorld interface.
type MockIHelloWorld struct {
	ctrl     *gomock.Controller
	recorder *MockIHelloWorldMockRecorder
}

// MockIHelloWorldMockRecorder is the mock recorder for MockIHelloWorld.
type MockIHelloWorldMockRecorder struct {
	mock *MockIHelloWorld
}

// NewMockIHelloWorld creates a new mock instance.
func NewMockIHelloWorld(ctrl *gomock.Controller) *MockIHelloWorld {
	mock := &MockIHelloWorld{ctrl: ctrl}
	mock.recorder = &MockIHelloWorldMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHelloWorld) EXPECT() *MockIHelloWorldMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIHelloWorld) Get() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(string)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockIHelloWorldMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIHelloWorld)(nil).Get))
}
